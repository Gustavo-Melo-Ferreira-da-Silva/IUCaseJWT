name: Deploy to Amazon ECS
on:
  push:
    branches:
      - main

env:
  AWS_REGION: sa-east-1
  ECS_CLUSTER: app_cluster
  CONTAINER_NAME: app
  ECS_SERVICE: app_service
  ECS_TD: .github/workflows/td.json
  JAVA_VERSION: 21

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    environment: prod
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Set up JDK
        uses: actions/setup-java@v2
        with:
          distribution: 'adopt'
          java-version: ${{ env.JAVA_VERSION }}

      - name: Install Maven
        run: |
          sudo apt-get install -y maven

      - name: Build and Test
        run: |
          cd App/IUCaseJWT
          mvn clean package
      
      - name: Terraform init
        run: |
          cd infra
          terraform init

      - name: Terraform plan
        run: |
          cd infra
          terraform plan

      - name: Terraform apply
        run: |
          cd infra
          terraform apply -auto-approve

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, tag, and push to Amazon ECR
        id: build-image
        env:
          ECR_REGISTRY: "860605510018.dkr.ecr.sa-east-1.amazonaws.com"
          ECR_REPOSITORY: "app_repo"
          IMAGE_TAG: latest
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG App/IUCaseJWT/
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          echo "::set-output name=image::$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG"

      - name: Fill in the new image ID in the Amazon ECS task definition
        id: task-def-1
        uses: aws-actions/amazon-ecs-render-task-definition@v1
        with:
          task-definition: ${{ env.ECS_TD }}
          container-name: ${{ env.CONTAINER_NAME }}
          image: ${{ steps.build-image.outputs.image }}

      - name: Deploy Amazon ECS task definition
        uses: aws-actions/amazon-ecs-deploy-task-definition@v1
        with:
          task-definition: ${{ steps.task-def-1.outputs.task-definition }}
          service: ${{ env.ECS_SERVICE }}
          cluster: ${{ env.ECS_CLUSTER }}
          wait-for-service-stability: false

